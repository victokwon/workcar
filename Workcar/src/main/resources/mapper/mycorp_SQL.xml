<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mycorp">

	<select id="cMemberDtl" resultType="hashmap">
		<!-- select ID, NAME, PHONE, EMAIL, INFOR_AGR, ACT_AGR FROM MEMBER WHERE 
			MEM_NO = #{memberNO} -->

		SELECT ID, NAME, PHONE, EMAIL, INFOR_AGR, ACT_AGR, M.MEM_NO, C.POS,
		CI.CORP_NO, CI.C_NAME,
		CI.C_BIZNO, CI.C_BOSS, CI.ADDR, CI.ADDR_DTL, CI.C_HPAGE, CI.ZIP, CI.CORP_IMG
		FROM MEMBER M JOIN C_MEMBER C ON (M.MEM_NO = C.MEM_NO)
		JOIN C_INFO CI ON ( C.CORP_NO = CI.CORP_NO)
		WHERE M.MEM_NO = #{memberNO}
	</select>

	<update id="uptinfo" parameterType="hashmap">
		UPDATE MEMBER SET PHONE = #{C_PHONE}, EMAIL = #{C_EMAIL}, NAME = #{C_NAME},
		INFOR_AGR = #{INFOR_AGR}, ACT_AGR = #{ACT_AGR}
		WHERE ID = #{C_ID}

	</update>


	<update id="uptinfopos" parameterType="hashmap">
		UPDATE (
		SELECT M.ID AS ID, C.POS AS POS
		FROM MEMBER M JOIN C_MEMBER C
		ON
		M.MEM_NO = C.MEM_NO
		)
		SET POS = #{C_POS}
		WHERE ID = #{C_ID}

	</update>

	<update id="uptcpinfo" parameterType="hashmap">


	</update>

	<select id="imemCnt" parameterType="hashMap"
		resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM MEMBER
	</select>

	<select id="imemList" parameterType="hashmap"
		resultType="hashmap">
		SELECT MEM_NO, ID, PHONE, JOIN_DATE
		FROM MEMBER
	</select>

	<select id="chkNowPass" parameterType="hashmap"
		resultType="Integer">

		SELECT COUNT(*) AS CNT FROM MEMBER
		WHERE ID = #{ID}
		AND PASS = #{nowpass}

	</select>

	<update id="uptNewPass" parameterType="hashmap">
		UPDATE MEMBER SET PASS = #{newpass}
		WHERE ID = #{ID}
	</update>


	<update id="outCMember" parameterType="hashmap">
		UPDATE MEMBER SET WDRAWL_DATE = SYSDATE
		WHERE ID =#{ID}
	</update>




	<select id="getAttndList" parameterType="String"
		resultType="hashmap">
		SELECT NAME, TO_CHAR(CHN_DATE,'YYYY-MM-DD') CHN_DATE,
		SECTOR_NAME, CMC.CARR, CARR_PER, CITY_NAME, REGION_NAME, ATTND_NO
		FROM
		ATTND A
		JOIN MEMBER M
		ON (A.T_MEM_NO = M.MEM_NO)
		JOIN RESUM R
		ON
		(A.RESUM_NO = R.RESUM_NO)
		JOIN (SELECT CAT_NAME CARR, SCD_CAT FROM
		COMM_CODE WHERE FST_CAT = 6) CMC
		ON (CMC.SCD_CAT = R.CARR)
		JOIN
		(SELECT CITY_NAME, REGION_NAME, REGION_NO, RE.CITY_NO
		FROM REGION RE
		JOIN CITY C
		ON(C.CITY_NO = RE.CITY_NO)) RE
		ON (R.REGION_NO = RE.REGION_NO)
		JOIN SECTOR S
		ON (R.SECTOR_NO = S.SECTOR_NO)
		WHERE A.DEL_CHK = 0
		AND
		A.E_MEM_NO = #{memNo}
	</select>

	<select id="getSuggetEmp" parameterType="hashmap"
		resultType="hashmap">
		SELECT NAME, CHN_DATE, SECTOR_NAME, CARR, CARR_PER, CITY_NAME,
		REGION_NAME, RESUM_NO
		FROM (SELECT NAME, TO_CHAR(CHN_DATE,'YYYY-MM-DD')
		CHN_DATE, SECTOR_NAME, CMC.CARR, CARR_PER, CITY_NAME, REGION_NAME,
		R.RESUM_NO, ROW_NUMBER() OVER(ORDER BY DBMS_RANDOM.VALUE) RNUM,
		R.DEL_CHK
		FROM RESUM R
		JOIN MEMBER M
		ON (R.MEM_NO = M.MEM_NO)
		JOIN (SELECT CAT_NAME CARR, SCD_CAT
		FROM COMM_CODE WHERE FST_CAT = 6) CMC
		ON (CMC.SCD_CAT = R.CARR)
		JOIN
		(SELECT CITY_NAME, REGION_NAME, REGION_NO, RE.CITY_NO
		FROM REGION RE
		JOIN CITY C
		ON(C.CITY_NO = RE.CITY_NO)) RE
		ON (R.REGION_NO = RE.REGION_NO)
		JOIN SECTOR S
		ON (R.SECTOR_NO = S.SECTOR_NO)
		JOIN (SELECT SECTOR_NO FROM
		C_SECTOR CS JOIN C_MEMBER CM ON (CM.CORP_NO = CS.CORP_NO) WHERE MEM_NO
		= #{memNo}) MS
		ON (MS.SECTOR_NO = R.SECTOR_NO)
		LEFT JOIN ATTND A
		ON (A.RESUM_NO = R.RESUM_NO)
		WHERE R.DEL_CHK = 0
		AND A.RESUM_NO IS NULL
		<if test="suggetEmpNoList neq null">
			AND NOT R.RESUM_NO IN (
			<foreach collection="suggetEmpNoList" item="item"
				separator=",">
				#{item.suggetEmpNo}
			</foreach>
			)
		</if>
		) V
		WHERE V.RNUM = 1
	</select>


<!-- 	<update id="delAttention" parameterType="String">
		UPDATE ATTND
		SET DEL_CHK
		= 1
		WHERE ATTND_NO = #{target}
	</update> -->

	<delete id="delAttention" parameterType="String">
		DELETE ATTND
		WHERE ATTND_NO = #{target}
	</delete>


	<select id="resumeMemNo" parameterType="hashmap"
		resultType="String">
		SELECT MEM_NO
		FROM RESUM
		WHERE RESUM_NO = #{resumeNo}
	</select>

	<insert id="addAttned">
		INSERT INTO ATTND(
		ATTND_NO,
		E_MEM_NO,
		T_MEM_NO,
		RESUM_NO
		) VALUES (
		ATTND_SEQ.NEXTVAL,
		#{memNo},
		#{tMemNo},
		#{resumeNo}
		)
	</insert>

	<select id="getEmpCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) CNT
		FROM EMP_ANNC EA
		LEFT OUTER JOIN (SELECT EMP_NO FROM SUPP_REQ WHERE MEM_NO = #{tMemNo} ) SR
		ON (EA.EMP_NO = SR.EMP_NO)
		WHERE DEL_CHK = 0
		AND MEM_NO = ${memNo}
		AND SR.EMP_NO IS NULL
	</select>

	<select id="getEmp" parameterType="hashmap" resultType="hashmap">
		SELECT
		EMP_NO, EMP_TITLE, DLINE
		FROM
		(
		SELECT EA.EMP_NO, EMP_TITLE, TO_CHAR(DLINE, 'YYYY-MM-DD') DLINE,
		ROW_NUMBER() OVER (ORDER BY DLINE) AS RNUM
		FROM EMP_ANNC EA
		LEFT OUTER JOIN (SELECT EMP_NO FROM SUPP_REQ WHERE MEM_NO = #{tMemNo} ) SR
		ON (EA.EMP_NO = SR.EMP_NO)
		WHERE DEL_CHK = 0
		AND MEM_NO = ${memNo}
		AND SR.EMP_NO IS NULL
		) E
		WHERE E.RNUM BETWEEN #{startCnt} AND #{endCnt}
		ORDER BY EMP_NO
	</select>

	<insert id="JC" parameterType="hashmap">
		INSERT INTO SUPP_REQ (
		MEM_NO,
		EMP_NO
		) VALUES (
		#{tMemNo},
		#{empNo}
		)
	</insert>


</mapper>