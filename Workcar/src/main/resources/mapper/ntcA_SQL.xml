<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="space">
	 	<select id="getACnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM NOTICE N INNER JOIN MEMBER M
                  ON N.MEM_NO = M.MEM_NO
		WHERE N.DEL_CHK = 0
		<if test="searchTxt != null and searchTxt != ''">
			<choose>
				<when test="searchGbn eq 0"> <!-- 전체 -->
					AND N.NOTICE_GBN LIKE '%' || #{searchTxt} || '%'
					OR N.NOTICE_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 1"> <!-- 구분 -->
					AND N.NOTICE_GBN LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 2"> <!-- 제목 -->
					AND N.NOTICE_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
			</choose>
		</if>
	</select> 
	 
	<select id="getAList" parameterType="hashmap" resultType="hashmap">
      SELECT N.NOTICE_NO, N.NOTICE_GBN, N.NOTICE_TITLE, N.NAME, N.REG_DATE, N.ATTCH_NO, N.ATTCH_NAME
      FROM(SELECT N.NOTICE_NO, N.NOTICE_GBN, N.NOTICE_TITLE, M.NAME, TO_CHAR(N.REG_DATE,'YYYY-MM-DD') AS REG_DATE, NA.ATTCH_NO, NA.ATTCH_NAME,
         ROW_NUMBER() OVER(ORDER BY N.NOTICE_NO DESC) AS RNUM
           FROM NOTICE N INNER JOIN MEMBER M
                  ON N.MEM_NO = M.MEM_NO
                  LEFT OUTER JOIN NOTICE_ATTCH NA
                  ON N.NOTICE_NO = NA.NOTICE_NO
                  WHERE N.DEL_CHK = 0
      <if test="searchTxt != null and searchTxt != ''">
         <choose>
         		<when test="searchGbn eq 0"> <!-- 전체 -->
					AND N.NOTICE_GBN LIKE '%' || #{searchTxt} || '%'
					OR N.NOTICE_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 1"> <!-- 구분 -->
					AND N.NOTICE_GBN LIKE '%' || #{searchTxt} || '%'
				</when>
				<when test="searchGbn eq 2"> <!-- 제목 -->
					AND N.NOTICE_TITLE LIKE '%' || #{searchTxt} || '%'
				</when>
				
			</choose>
      </if>
      ) N
      WHERE N.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	
	<select id="getA" parameterType="hashmap" resultType="hashmap">
		SELECT N.NOTICE_NO, N.NOTICE_GBN, N.NOTICE_TITLE, M.NAME, N.NOTICE_CNTT,
			   TO_CHAR(REG_DATE, 'YYYY-MM-DD') AS REG_DATE, NA.ATTCH_NO, NA.ATTCH_NAME
		FROM NOTICE N INNER JOIN MEMBER M
                ON N.MEM_NO = M.MEM_NO
                LEFT OUTER JOIN NOTICE_ATTCH NA
                ON N.NOTICE_NO = NA.NOTICE_NO
		WHERE 1 = 1
		AND N.NOTICE_NO = #{no}
	</select>
	
	<insert id="NoticeAdd" parameterType="hashmap">
		INSERT INTO NOTICE(NOTICE_NO, MEM_NO, NOTICE_TITLE, NOTICE_CNTT)
		VALUES(NOTICE_SEQ.nextval, #{memNo}, #{title}, #{cntt})
	</insert>
		
	<insert id="AttchAdd" parameterType="hashmap">
		INSERT INTO NOTICE_ATTCH(NOTICE_NO, ATTCH_NO, ATTCH_NAME)
        VALUES(NOTICE_SEQ.currval, NOTICE_ATTCH_SEQ.nextval, #{cntt})
	</insert>
	 
	<update id="NoticeUpdate" parameterType="hashmap">
		UPDATE NOTICE SET NOTICE_TITLE = #{title},
               		  NOTICE_CNTT = #{cntt}
		WHERE NOTICE_NO = #{no}
		AND MEM_NO = #{memNo}
	</update>
	<update id="AttchUpdate" parameterType="hashmap">
		UPDATE NOTICE_ATTCH SET ATTCH_NAME = #{nFile}
		WHERE NOTICE_NO = #{no}
		AND MEM_NO = #{memNo}
	</update>
	<update id="ABDelete" parameterType="hashmap">
		UPDATE NOTICE 
		SET DEL_CHK = 1
		WHERE NOTICE_NO = #{no}
	</update>
	
</mapper>