<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CInfoDtl_SQL">
	<select id="corporinfo" parameterType="hashmap"
		resultType="hashmap">
		select ci.corp_no as corp_no, ci.c_name as c_name ,
		ci.c_boss as boss,
		ci.c_hpage as hpage, regexp_replace (ci.wrk_cnt
		,'(.{3})','\1,\2' ) as
		wrk_cnt, ci.list_chk as list_chk,
		ci.addr as
		addr, ci.addr_dtl as addt_dtl,
		st.sector_name as sector_name,
		regexp_replace( cs.sales_amount,
		'(.{3})(.{3})(.{3})','\1,\2,\3,\4') as
		sales_amount,
		m.name as name ,
		regexp_replace(m.phone,'(.{3})(.+)(.{4})','\1-\2-\3') as
		phone, m.email
		as email, cm.pos as pos,
		cs.REG_DATE
		from member m join c_member cm on
		m.mem_no = cm.mem_no
		join c_info ci on ci.corp_no = cm.corp_no
		join
		c_sales cs on ci.corp_no = cs.corp_no
		join c_sector cst on ci.corp_no =
		cst.corp_no
		join sector st on cst.sector_no = st.sector_no
		where
		ci.corp_no = #{cRNo}
		and m.mem_gbn = 2
	</select>
	<select id="list_paging" parameterType="hashmap"
		resultType="Integer">
		select count(c.corp_no) cnt
		from c_info c join c_sales cs on
		c.corp_no = cs.corp_no
	</select>
	<select id="getP2" parameterType="hashmap" resultType="hashmap">
		select
		c_name,sales, reg_date,RNUM, sector_name,corp_no
		from (
		select c_name,
		rtrim (trunc( sales_amount, -8),'0') sales,
		to_char(reg_date,'yy-mm-dd') reg_date,ROW_NUMBER() OVER (ORDER BY
		cm.corp_no DESC) AS RNUM,
		sector_name, ci.corp_no corp_no
		from member m
		join c_member cm on m.mem_no = cm.mem_no
		join c_info ci on ci.corp_no =
		cm.corp_no
		join c_sales cs on ci.corp_no = cs.corp_no
		join c_sector cst
		on ci.corp_no = cst.corp_no
		join sector st on cst.sector_no =
		st.sector_no
		where ci.corp_no = cm.corp_no
		and m.mem_gbn = 2
		) mr
		WHERE
		mr.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	<select id="rating" parameterType="hashmap" resultType="hashmap">
		select
		to_char(TRUNC(avg(wlb))) WLB, to_char(TRUNC(avg(promo_poss))) PROMO,
		to_char(TRUNC(avg(c_cult))) CULTURE, to_char(TRUNC(avg(wfare_pay)))
		WFARE, to_char(TRUNC(avg(mgm))) MGM ,to_char(TRUNC(
		sum(wlb+promo_poss+c_cult+wfare_pay+mgm)/count(wlb)/5)) TOTAL
		from
		grade g join c_info ci on g.corp_no = ci.corp_no
		where g.corp_no =
		#{cRNo}
	</select>
	
	<update id="reviews" parameterType="hashmap">
		update c_info set views =
		views + 1
		where corp_no = #{cRNo}
	</update>
	
	<insert id="starEnroll" parameterType="hashmap">
		INSERT INTO GRADE (
		GRADE_NO ,
		APLMEM_NO,
		CORP_NO,
		WLB,
		PROMO_POSS,
		C_CULT,
		WFARE_PAY,
		MGM,
		EVAL
		)
		VALUES (
		GRADE_SEQ.NEXTVAL,
		'1',
		#{cRNo},
		#{work},
		#{promotion},
		#{culture},
		#{welfare},
		#{management},
		#{GooneEval}
		)
	</insert>

</mapper>